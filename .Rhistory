View()
wide_prop <- prop %>%
spread(kmeans5, freq)
wide_prop %>%
left_join(genesweep_final_real)
wide_prop %>%
left_join(genesweep_final_real) %>%
select(-12:)
wide_prop %>%
left_join(genesweep_final_real) %>%
select(-12:17)
wide_prop %>%
left_join(genesweep_final_real) %>%
select(-PMID_1, PMID_2)
wide_prop %>%
left_join(genesweep_final_real) %>%
select(-PMID_1, -PMID_2, -PMID_3, -PMID_4, -PMID_5, -PMID_6, -PMID_7, -PMID_8, -PMID_9, -PMID_10)
wide_prop %>%
left_join(genesweep_final_real) %>%
select(-PMID_1, -PMID_2, -PMID_3, -PMID_4, -PMID_5, -PMID_6, -PMID_7, -PMID_8, -PMID_9, -PMID_10) %>%
select(-uniqueid)
reg_ready <- wide_prop %>%
left_join(genesweep_final_real) %>%
select(-PMID_1, -PMID_2, -PMID_3, -PMID_4, -PMID_5, -PMID_6, -PMID_7, -PMID_8, -PMID_9, -PMID_10) %>%
select(-uniqueid)
View(wide_prop)
View(reg_ready)
lm(guess ~ '0' + '1' + '2' + '3' + '4')
lm(guess ~ '0' + '1' + '2' + '3' + '4', reg_ready)
?lm()
reg_ready[is.na(reg_ready)] = 0
lm(guess ~ '0' + '1' + '2' + '3' + '4', reg_ready)
colnames(reg_ready)
lm(guess ~ 0 + '1' + '2' + '3' + '4', reg_ready)
lm(guess ~ 0 + 1 + 2 + 3 + 4, reg_ready)
lm(guess ~ 0, reg_ready)
lm(guess ~ 1, reg_ready)
ggplot(reg_ready) +
geom_point(aes(guess, 0))
ggplot(reg_ready) +
geom_point(aes(guess, 1))
ggplot(reg_ready) +
geom_point(aes(guess, freq))
colnames(reg_ready)
ggplot(reg_ready) +
geom_point(aes(guess, 0))
ggplot(reg_ready) +
geom_point(aes(guess, 1))
ggplot(reg_ready) +
geom_point(aes(guess, 2))
ggplot(reg_ready) +
geom_smooth(aes(guess, 2))
View(reg_ready)
str(reg_ready)
lm(guess~0, reg_ready)
as.double(reg_ready$`0`)
as.double(reg_ready$`1`)
as.double(reg_ready$`2`)
as.double(reg_ready$`3`)
as.double(reg_ready$`4`)
str(reg_ready)
lm(guess~0, reg_ready)
lm(guess~`0`, reg_ready)
reg_ready$`0` = as.numeric(reg_ready$`0`)
lm(guess~`0`, reg_ready)
str(reg_ready$guess)
reg_ready$guess = as.numeric(reg_ready$guess)
lm(guess~`0`, reg_ready)
lm(guess~`0` + `1`, reg_ready)
mod1 <- lm(guess~`0` + `1` + `2` + `3` + `4`, reg_ready)
tidy(mod1)
library(broom)
tidy(mod1)
library(stargazer)
install.packages("stargazer")
library(stargazer)
stargazer(mod1)
install_github("pewresearch/pewmethods", build_vignettes = TRUE)
install.packages("devtools")
install_github("pewresearch/pewmethods", build_vignettes = TRUE)
devtools::install_github("pewresearch/pewmethods", build_vignettes = TRUE)
tas <- c("Neeraj", "Deblina", "Dominique")
roles <- c("Notes", "Discussion Monitor", "Where Needed")
df <- data.frame(tas, roles)
head(df)
sample(df)
sample(df, length(df))
sample(tas, length(tas))
sample(tas, roles
)
sample(tas, roles)
rm(list = ls())
tas <- c("Neeraj", "Dominque", "Deblina")
roles <- c("Notes", "Discussion", "Where Needed")
sample(roles)
print(sample(roles))
print(sample(tas))
print(sample(tas))
print(sample(tas))
tas <- c("Neeraj", "Dominique", "Deblina")
roles <- c("Notes", "Discussion", "Where Needed")
random_ta <- function(tas,roles) {
tas_rand <- sample(tas)
df <- data.frame(tas_rand, roles)
}
random_ta(tas, roles)
random_ta(tas, roles)
random_ta <- function(tas,roles) {
tas_rand <- sample(tas)
print(tas_rand)
df <- data.frame(tas_rand, roles)
View(df)
}
random_ta <- function(tas,roles) {
tas_rand <- sample(tas)
print(tas_rand)
df <- data.frame(tas_rand, roles)
View(df)
}
random_ta(tas,roles)
random_ta(tas,roles)
random_ta(tas,roles)
random_ta(tas,roles)
random_ta(tas,roles)
random_ta(tas,roles)
random_ta(tas,roles)
random_ta(tas,roles)
random_ta(tas,roles)
random_ta(tas,roles)
random_ta(tas,roles)
random_ta(tas,roles)
random_ta <- function(tas,roles) {
tas_rand <- sample(tas)
df <- data.frame(tas_rand, roles)
View(df)
}
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
roles <- c("Notes", "Discussion", "Where Needed")
tas <- c("Neeraj", "Dominique", "Deblina")
random_ta <- function(tas,roles) {
tas_rand <- sample(tas)
df <- data.frame(tas_rand, roles)
View(df)
}
random_ta(tas, roles)
roles <- c("Notes", "Discussion", "Where Needed")
tas <- c("Neeraj", "Dominique", "Deblina")
random_ta <- function(tas,roles) {
tas_rand <- sample(tas)
df <- data.frame(tas_rand, roles)
View(df)
}
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
random_ta(tas, roles)
usethis::use_course("uc-cfss/grammar-of-graphics")
install.packages("tidytexts")
install.packages("tidytexts")
update.packages(ask = FALSE, checkBuilt = TRUE)
version
pwd()
library(tidyverse)    # load tidyverse packages, including ggplot2
library(knitr)        # load functions for formatting tables
# get data from rcfss package
# install latest version if not already installed
# devtools::install_github("uc-cfss/rcfss")
library(rcfss)
# load the data
data("mass_shootings")
mass_shootings
# get data from rcfss package
# install latest version if not already installed
devtools::install_github("uc-cfss/rcfss")
# get data from rcfss package
# install latest version if not already installed
#devtools::install_github("uc-cfss/rcfss")
library(rcfss)
# load the data
data("mass_shootings")
mass_shootings
summarize(.data = white_male_mi, count = n())  %>%  View()
mass_shootings %>%
filter(male == "TRUE" & race == "White" & prior_mental_illness == "Yes" & year > 2000)
summarize(.data = white_male_mi, count = n())  %>%  View()
mass_shootings %>%
filter(male == "TRUE" & race == "White" & prior_mental_illness == "Yes" & year > 2000)
summarize(count = n())  %>%  View()
white_male_mi <- mass_shootings %>%
filter(male == "TRUE" & race == "White" & prior_mental_illness == "Yes" & year > 2000)
summarize(.data = white_male_mi, count = n())
View(white_male_mi)
ggplot(shooterbyrace) +
geom_bar(mapping = aes(x=reorder(race,race,
function(x)-length(x)))) +
ggtitle("Figure A: Mass Shooting in the United States (1982-2019)") +
xlab("Race") + ylab("Frequency")
shooterbyrace <- filter(mass_shootings, !(race == "NA"))
ggplot(shooterbyrace) +
geom_bar(mapping = aes(x=reorder(race,race,
function(x)-length(x)))) +
ggtitle("Figure A: Mass Shooting in the United States (1982-2019)") +
xlab("Race") + ylab("Frequency")
mass_shootings %>%
group_by(year) %>%
summarize(n()) -> mby
View(mby)
library(tidyverse)
library(gapminder)
library(rcfss)
data("dadmom")
glimpse(dadmom)
View(dadmom)
pivot_longer(data = dadmom,
# cols we want to pivot across
cols = -famid,
names_to = c(".value", "type"),
names_sep = -1)
??pivot_longer
dadmom
dadmom %>%
gather(key = key, value = value, named:incm)
dadmom %>%
gather(key = key, value = value, named:incm) %>%
separate(col = key, into = c("variable, type"), sep = -1)
dadmom %>%
gather(key = key, value = value, named:incm) %>%
separate(col = key, into = c("variable", "type"), sep = -1)
dadmom %>%
gather(key = key, value = value, named:incm) %>%
separate(col = key, into = c("variable", "type"), sep = -1) %>%
spread(key = variable, value =value, convert = TRUE)
??spread
dadmom %>%
pivot_longer(
cols = named:incm,
names_to = c("variable", "type"),
names_sep = -1,
values_to = "value",
values_ptypes = list(value = character())
) %>%
pivot_wider(
names_from = variable,
values_from = value,
) %>%
mutate(inc = parse_number(inc))
dadmom %>%
pivot_longer(
cols = named:incm,
names_to = c("variable", "type"),
names_sep = -1,
values_to = "value",
values_ptypes = list(value = character())
dadmom %>%
pivot_longer(
cols = named:incm,
names_to = c("variable", "type"),
names_sep = -1,
values_to = "value",
values_ptypes = list(value = character())
)
??gather()
dadmom
dadmom %>%
gather(key = key, value = value, named:incm)
dadmom %>%
gather(key = key, value = value, named:incm) %>%
separate(col = key, into = c("variable", "type"), sep = -1)
dadmom %>%
gather(key = key, value = value, named:incm) %>%
separate(col = key, into = c("variable", "type"), sep = -1) %>%
spread(key = variable, value =value, convert = TRUE)
cast <- dadmom %>%
gather(key = key, value = value, named:incm) %>%
separate(col = key, into = c("variable", "type"), sep = -1) %>%
spread(key = variable, value =value, convert = TRUE)
as.double(cast$inc)
cast$inc <- as.double(cast$inc)
str(cast)
cast
hiv <- read_csv("data/gapminder.csv")
dadmom
data("dadmom")
library(tidyverse)
library(dadmom)
library(rcfss)
data("dadmom")
dadmom
pivot_longer(data = dadmom,
# cols we want to pivot across
cols = c(named, incd, namem, incm),
#placeholder colname and values
names_to = c(".value", "type"),
#getting mom and dad info out of last character
names_sep = -1)
pivot_longer (data = dadmom,
cols = -famid,
names_to = c ("value", "type"),
names_sep = -1)
library(tidyverse)
pivot_longer (data = dadmom,
cols = -famid,
names_to = c ("value", "type"),
names_sep = -1)
library(rcfss)
data("dadmom")
pivot_longer (data = dadmom,
cols = -famid,
names_to = c ("value", "type"),
names_sep = -1)
pivot_longer(data = dadmom,
# cols we want to pivot across
cols = -famid,
#placeholder colname and values
names_to = c(".value", "type"),
#getting mom and dad info out of last character
names_sep = -1)
??pivot_longer
??geom_point()
pythagorean <- function(x = NULL, y = NULL, hyp = NULL) {
sides <- c(x, y)
if (length(sides) == 3) {
stop("Must input 2 sides lengths")
} else if (length(sides) == 1) {
stop("Must input 2 side lengths")
} else if (is.numeric(x) != TRUE | is.numeric(y) != TRUE) {
stop("Must provide numeric inputs")
} else if (hyp == TRUE && y > x) {
return(sqrt(y^2 - x^2))
} else if (hyp == TRUE && x > y) {
return(sqrt(x^2 - y^2))
} else {
return(sqrt(x^2 + y^2))
}
}
pythagorean(2,3)
pythagorean(2,3,4)
pythagorean(1,2)
rm(list=ls())
install.packages("styler")
usethis::use_course("uc-cfss/debugging-and-defensive-programming")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(tidyverse)
df <-
read_csv("Public/OneDrive - The University of Chicago/Attachments/extracurriculars/projects/genesweep/cshl/regression/tokenized_sub.csv")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
df <-
read_csv("Public/OneDrive - The University of Chicago/Attachments/extracurriculars/projects/genesweep/cshl/regression/tokenized_sub.csv")
df <- read_csv("Public/OneDrive - The University of Chicago/Attachments/extracurriculars/projects/genesweep/cshl/regression/tokenized_sub.csv")
View(df)
class(df$major)
df$major
library(rvest)
library(tidyverse)
link <- read_html(https://nces.ed.gov/programs/digest/d16/tables/dt16_204.75d.asp)
link <- read_html(nces.ed.gov/programs/digest/d16/tables/dt16_204.75d.asp)
link <- read_html(https://nces.ed.gov/programs/digest/d16/tables/dt16_204.75d.asp)
link <- read_html(http://nces.ed.gov/programs/digest/d16/tables/dt16_204.75d.asp)
link <- read_html("http://nces.ed.gov/programs/digest/d16/tables/dt16_204.75d.asp")
html_nodes(link, ".TblCls013 , .TblCls012, .TblCls011, .TblCls009, .TblCls008, .TblCls007, .TblCls010, .TblCls004, .TblCls006, .TblCls005, .TblCls003, .TblCls002, .TblCls001")
soup <- html_nodes(link, ".TblCls013 , .TblCls012, .TblCls011, .TblCls009, .TblCls008, .TblCls007, .TblCls010, .TblCls004, .TblCls006, .TblCls005, .TblCls003, .TblCls002, .TblCls001")
html_text(soup)
html_text(soup) %>% as_tibble()
html_text(soup) %>% as_tibble() %>% View()
html_table(soup) %>% as_tibble() %>% View()
html_table(soup)
soup %>%
# convert to character vector
html_text() %>%
# drop the first 5 values since they are header information and
# mess with the formatting of the future table
# use . to refer to the piped output from the last function
.[6:length(.)]
html_table(soup) %>% as_tibble() %>% View()
html_text(soup) %>% as_tibble() %>% View()
shiny::runApp('Public/OneDrive - The University of Chicago/Attachments/extracurriculars/projects/officeholding-viz/shinyapp')
library(tidyverse)
library(readr)
repo <- read_csv("Downloads/cleaned_repo_info.csv")
rollup <- function(var) {
repo %>%
group_by({{ var }}) %>%
summarise(n = n())
}
rollup(watch) %>%
filter(watch < 11) %>%
ggplot() +
geom_col(aes(watch, n)) +
scale_y_continuous(labels = scales::comma) +
scale_x_continuous(breaks = c(0:10))
rollup(watch) %>%
filter(watch < 11) %>%
ggplot() +
geom_col(aes(watch, n)) +
scale_y_continuous(labels = scales::comma) +
scale_x_continuous(breaks = c(0:10))
rollup(stars) %>%
filter(watch < 11) %>%
ggplot() +
geom_col(aes(watch, n)) +
scale_y_continuous(labels = scales::comma) +
scale_x_continuous(breaks = c(0:10))
glimpse(repos)
glimpse(repo)
rollup(star) %>%
filter(watch < 11) %>%
ggplot() +
geom_col(aes(watch, n)) +
scale_y_continuous(labels = scales::comma) +
scale_x_continuous(breaks = c(0:10))
rollup(star) %>%
filter(star < 11) %>%
ggplot() +
geom_col(aes(watch, n)) +
scale_y_continuous(labels = scales::comma) +
scale_x_continuous(breaks = c(0:10))
rollup(star) %>%
filter(star < 11) %>%
ggplot() +
geom_col(aes(star, n)) +
scale_y_continuous(labels = scales::comma) +
scale_x_continuous(breaks = c(0:10))
glimpse(repo)
rollup(fork) %>%
filter(fork < 11) %>%
ggplot() +
geom_col(aes(fork, n)) +
scale_y_continuous(labels = scales::comma) +
scale_x_continuous(breaks = c(0:10))
rollup(fork) %>%
filter(fork > 11) %>%
ggplot() +
geom_col(aes(fork, n)) +
scale_y_continuous(labels = scales::comma)
rollup(fork) %>%
filter(fork < 11) %>%
ggplot() +
geom_col(aes(fork, n)) +
scale_y_continuous(labels = scales::comma) +
scale_x_continuous(breaks = c(0:10))
??geom_density
repo %>%
geom_density(aes(fork))
repo %>%
ggplot() +
geom_density(aes(fork))
repo %>%
ggplot() +
geom_density(aes(fork)) +
geom_density(aes(star)) +
geom_density(aes(watch))
install.packages("patchwork")
library(patchwork)
p3 <- rollup(fork) %>%
filter(fork < 11) %>%
ggplot() +
geom_col(aes(fork, n)) +
scale_y_continuous(labels = scales::comma) +
scale_x_continuous(breaks = c(0:10))
p2 <- rollup(star) %>%
filter(star < 11) %>%
ggplot() +
geom_col(aes(star, n)) +
scale_y_continuous(labels = scales::comma) +
scale_x_continuous(breaks = c(0:10))
p1 <- rollup(watch) %>%
filter(watch < 11) %>%
ggplot() +
geom_col(aes(watch, n)) +
scale_y_continuous(labels = scales::comma) +
scale_x_continuous(breaks = c(0:10))
p1 + p2 + p3
p1 / p2 / p3
install.packages("flair")
install.packages("bookdown")
setwd("~/Public/OneDrive - The University of Chicago/Attachments/extracurriculars/projects/speedyscholar")
